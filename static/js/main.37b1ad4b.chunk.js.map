{"version":3,"sources":["images/logo.png","images/bg.png","components/AddForm.js","components/Todo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["AddForm","setInputText","todos","setTodos","inputText","setStatus","className","value","onChange","e","console","log","target","type","placeholder","required","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","ToDoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","saveLocalTodos","src","logo","alt","bg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37b1ad4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.501adae8.png\";","export default __webpack_public_path__ + \"static/media/bg.cbc3f2f3.png\";","import React from 'react';\r\nimport {MdAdd } from \"react-icons/md\";\r\n\r\nfunction AddForm({setInputText, todos ,setTodos , inputText, setStatus}) {\r\n    const inputTextHandler =(e) =>{\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submiTodoHandler = (e) =>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text: inputText,completed: false, id: Math.random()*1000}\r\n        ])\r\n        setInputText(\" \");\r\n    }\r\n    function statusHandler(e){\r\n        console.log(e.target.value)   \r\n        setStatus(e.target.value);\r\n\r\n    }\r\n    \r\n    return (\r\n        <form className=\"todo_form\">\r\n            <div className=\"add_todo_container\">\r\n                <div className=\"form_container\">\r\n                    <input value={inputText} \r\n                    onChange ={inputTextHandler} type=\"text\" className=\"todo_input\" placeholder=\" \" required/>\r\n                    <label className=\"todo_label\">Add Agenda</label>\r\n                </div>\r\n                <button onClick ={submiTodoHandler} className=\"add_button\" type=\"submit\">\r\n                    <MdAdd/>\r\n                </button>\r\n            </div>\r\n            <div className=\"dropdown\">\r\n                <select onChange ={statusHandler} name=\"todo\" className=\"filter-todos\">\r\n                    <option value=\"all\" className=\"select-item\">All</option>\r\n                    <option value=\"completed\" className=\"select-item\">Completed</option>\r\n                    <option value=\"uncompleted\" className=\"select-item\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\n\r\nfunction Todo({ text, todo, todos, setTodos }) {\r\n    function deleteHandler() {\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n    }\r\n\r\n    function completeHandler() {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n    return (\r\n        <div className=\"todo\">\r\n            <ul className={`todo_item ${todo.completed ? \"completed\" : \"\"}`}>{text}</ul>\r\n            <div className=\"todo_buttons\">\r\n                <button onClick={completeHandler} className=\"done-btn\"><FaCheck /></button>\r\n                <button onClick={deleteHandler} className=\"delete-btn\">< FaRegTrashAlt /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Todo;","import React from 'react';\r\nimport ToDo from \"./Todo\";\r\n\r\n\r\nfunction ToDoList({todos, setTodos, filteredTodos}){\r\n   \r\n    return(\r\n        <div className =\"todo-list-container\">\r\n            <ul className = \"todo-list\">\r\n                {filteredTodos.map((todo)=>(\r\n                <ToDo\r\n                 setTodos={setTodos}\r\n                 todos={todos}\r\n                 key = {todo.id}\r\n                 todo={todo} \r\n                 text={todo.text}/>))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React,{useState, useEffect} from \"react\";\nimport logo from \"./images/logo.png\"\nimport bg from \"./images/bg.png\"\nimport AddForm from \"./components/AddForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport './App.css';\n\nfunction App() {\n \n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos , setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  useEffect(() => {getLocalTodos();},[]);\n  useEffect(() => {filterHandler();\n    saveLocalTodos();},[todos,status]\n  );\n  function filterHandler(){\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n      setFilteredTodos(todos.filter(todo => todo.completed === false));\n      break;\n      default:\n      setFilteredTodos(todos);\n      break;\n    }\n  };\n\n  const saveLocalTodos =() =>{\n    localStorage.setItem(\"todos\",JSON.stringify(todos));\n  \n  };\n\n  function getLocalTodos(){\n    if(localStorage.getItem(\"todos\") == null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\",JSON.stringify(\"todos\")));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"navbar\">\n          <div className=\"navbar_brand\">\n            <img src={logo} alt=\"logo\" className=\"brand_logo\" />\n          </div>\n          <div className=\"nav_text\"> SAHIL'S TO DO LIST</div>\n        </div>\n      </header>\n      <main className=\"content_holder\">\n        <section className=\"hero\">\n          <div className=\"hero_bg_Image_container\">\n            <img src={bg}\n              alt=\"BG hero image\" className=\"hero_bg_image\" />\n          </div>\n          <div className=\"hero_bg_overlay\"></div>\n          <div className=\"hero_card\">\n            <h2 className=\"hero_title\">Add Your Today's Agenda</h2>\n            <AddForm inputText={inputText}\n            todos ={todos} \n            setTodos={setTodos} \n            setInputText ={setInputText} \n            setStatus={setStatus}\n            filteredTodos={filteredTodos}/>\n            \n            <ToDoList setTodos ={setTodos} \n            todos ={todos}\n            filteredTodos={filteredTodos}\n            />\n          </div>\n        </section>\n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}